name: Sync Files to Other Repos

on:
  push:
    paths:
      - 'niclai-station.txt'
      - 'lunes.txt'
      - 'cookies.txt'
    branches: [ main ]

jobs:
  sync-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_LAIJUNLING }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Process and Sync Files
        env:
          PAT_TOKEN: ${{ secrets.PAT_LAIJUNLING }}
        run: |
          # 安装依赖
          pip install requests

          # Python 脚本处理文件同步
          python << EOF
          import requests
          import os

          pat_token = os.environ['PAT_TOKEN']
          headers = {
              'Authorization': f'token {pat_token}',
              'Accept': 'application/vnd.github.v3+json'
          }

          # 处理 niclai-station.txt 更新
          if 'niclai-station.txt' in os.environ.get('GITHUB_CHANGED_FILES', ''):
              # 获取 lunes.txt 内容
              with open('lunes.txt', 'r') as f:
                  lunes_content = f.read()
              
              # 获取 niclai-station.txt 内容
              with open('niclai-station.txt', 'r') as f:
                  niclai_content = f.read()
              
              # 合并内容
              stations_content = lunes_content + niclai_content
              
              # 更新 youtubedownloader 中的 stations.txt
              url = 'https://api.github.com/repos/laijunling/youtubedownloader/contents/stations.txt'
              
              # 获取文件 SHA
              response = requests.get(url, headers=headers)
              sha = response.json().get('sha', '') if response.status_code == 200 else ''
              
              # 更新文件
              data = {
                  'message': 'Auto-update stations.txt from niclai-station.txt',
                  'content': stations_content.encode('utf-8').hex(),
                  'sha': sha
              }
              response = requests.put(url, headers=headers, json=data)
              print(f"Updated stations.txt: {response.status_code}")

          # 处理 lunes.txt 更新
          if 'lunes.txt' in os.environ.get('GITHUB_CHANGED_FILES', ''):
              # 读取 lunes.txt
              with open('lunes.txt', 'r') as f:
                  lines = f.readlines()
              
              # 分割文件
              vless_lines = lines[0:3]  # 第1-3行
              vmess_lines = lines[3:6]  # 第4-6行
              trojan_lines = lines[6:9]  # 第7-9行
              
              # 更新 lunes-vless.txt
              with open('lunes-vless.txt', 'w') as f:
                  f.writelines(vless_lines)
              
              # 更新 lunes-vmess.txt
              with open('lunes-vmess.txt', 'w') as f:
                  f.writelines(vmess_lines)
              
              # 更新 lunes-trojan.txt
              with open('lunes-trojan.txt', 'w') as f:
                  f.writelines(trojan_lines)
              
              # 提交更改到当前仓库
              import subprocess
              subprocess.run(['git', 'add', 'lunes-vless.txt', 'lunes-vmess.txt', 'lunes-trojan.txt'])
              subprocess.run(['git', 'commit', '-m', 'Auto-update lunes split files'])
              subprocess.run(['git', 'push'])
              
              # 更新 youtubedownloader 中的 stations.txt
              with open('niclai-station.txt', 'r') as f:
                  niclai_content = f.read()
              
              stations_content = ''.join(lines) + niclai_content
              
              url = 'https://api.github.com/repos/laijunling/youtubedownloader/contents/stations.txt'
              response = requests.get(url, headers=headers)
              sha = response.json().get('sha', '') if response.status_code == 200 else ''
              
              data = {
                  'message': 'Auto-update stations.txt from lunes.txt',
                  'content': stations_content.encode('utf-8').hex(),
                  'sha': sha
              }
              response = requests.put(url, headers=headers, json=data)
              print(f"Updated stations.txt: {response.status_code}")

          # 处理 cookies.txt 更新
          if 'cookies.txt' in os.environ.get('GITHUB_CHANGED_FILES', ''):
              with open('cookies.txt', 'r') as f:
                  cookies_content = f.read()
              
              # 更新 youtubedownloader 中的 cookies.txt
              url = 'https://api.github.com/repos/laijunling/youtubedownloader/contents/cookies.txt'
              
              response = requests.get(url, headers=headers)
              sha = response.json().get('sha', '') if response.status_code == 200 else ''
              
              data = {
                  'message': 'Auto-update cookies.txt',
                  'content': cookies_content.encode('utf-8').hex(),
                  'sha': sha
              }
              response = requests.put(url, headers=headers, json=data)
              print(f"Updated cookies.txt: {response.status_code}")

          EOF
